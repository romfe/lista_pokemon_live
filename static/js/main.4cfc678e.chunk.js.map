{"version":3,"sources":["graphql/query-pokemons.ts","components/Lista/styles.ts","components/Pokemon/styles.ts","components/Pokemon/Pokemon.tsx","components/Lista/ListaPokemon.tsx","components/FiltroCP/styles.ts","components/FiltroCP/FiltroCP.tsx","components/ListaTipos/styles.ts","components/ListaTipos/ListaTipos.tsx","components/Filtro/styles.ts","components/Filtro/Filtro.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["QUERY_POKEMONS","gql","MainCard","styled","div","Pokemon","props","classe","maxCP","className","Container","Row","Col","sm","xs","src","image","alt","name","types","join","number","ListaPokemon","useQuery","variables","first","data","pokemons","fluid","filter","pokemon","intervaloCP","listaTipos","includes","length","map","__typename","id","useStyles","makeStyles","root","width","FiltroCP","classes","useState","value","setValue","renderSlider","Typography","gutterBottom","Slider","onChange","event","newValue","valueLabelDisplay","max","ListaTipos","tipos","tiposSelecionados","setTiposSelecionados","changeHandler","e","currentTarget","valor","renderListaTipos","tipo","size","colorScheme","defaultIsChecked","Filtro","renderFiltro","GlobalStyle","createGlobalStyle","main","link","createHttpLink","uri","client","ApolloClient","cache","InMemoryCache","App","ApolloProvider","md","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cfc678e.chunk.js","sourcesContent":["import { gql } from 'graphql-tag';\n\nexport const QUERY_POKEMONS = gql`\n  query pokemons($first : Int!){\n    pokemons(first: $first){\n      id\n      number\n      name\n      image\n      maxCP\n      types\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const MainCard = styled.div`\n.lista-pokemon{\n  display:flex;\n  flex-flow: row wrap;\n  max-width: 596px;\n  max-height: 718px;\n  background: #F4F4F4 0% 0% no-repeat padding-box;\n  border-radius: 50px 50px 0px 0px;\n  opacity: 1;\n}\n\n.lista-titulo{\n  margin:5px;\n  padding-top: 30px;\n  margin-left:15px;\n  text-align: left;\n  font: normal normal bold 35px/46px Roboto;\n  letter-spacing: 0px;\n  color: #333333;\n  opacity: 1;\n}\n\n.lista-pokemon-view{\n  display:flex;\n  justify-content: space-around;\n  align-items: center;\n  overflow-y: scroll;\n  flex-flow: row wrap;\n  max-width: 596px;\n  max-height: 555px;\n}\n\n.lista-pokemon-view::-webkit-scrollbar{\n\n  width: 12px;\n  height: 543px;\n  background: #FFFFFF 0% 0% no-repeat padding-box;\n  border-radius: 9px;\n  opacity: 1;\n}\n\n.lista-pokemon-view::-webkit-scrollbar-thumb{\n  width: 12px;\n  height: 54px;\n  background: #DBDBDB 0% 0% no-repeat padding-box;\n  border-radius: 6px;\n  opacity: 1;\n}\n\n.texto-total{\n  text-align: left;\n  margin-left:15px;\n  font: normal normal bold 14px/19px Roboto;\n  letter-spacing: 0px;\n  color: #00A7FD;\n  opacity: 1;\n}\n`;","import styled from \"styled-components\";\n\nexport const MainCard = styled.div`\n\n.pokemon{\n  display:flex;\n  justify-content: space-between;\n  align-items: center;\n  top: 188px;\n  left: 323px;\n  width: 240px;\n  height: 80px;\n  background: #FFFFFF;\n  border-radius: 20px;\n  opacity: 1;\n  margin-top:7.5px;\n  margin-bottom: 7.5px;\n}\n\n.imagem-pokemon{\n  display:flex;\n  width: 64px;\n  height: 64px;\n  background: transparent;\n  border: 1px solid #DBDBDB;\n  border-radius: 14px;\n  opacity: 1;\n}\n\n.nome-pokemon{\n  display:flex;\n  text-align: left;\n  font: normal normal bold 16px/21px Roboto;\n  letter-spacing: 0px;\n  color: #333333;\n  opacity: 1;\n}\n\n.tipos-pokemon{\n\n  text-align: left;\n  font: normal normal normal 12px/16px Roboto;\n  letter-spacing: 0px;\n  color: #939393;\n  opacity: 1;\n}\n\n.numero-pokemon{\n  display:flex;\n  width: 20px;\n  height: 16px;\n  text-align: left;\n  font: normal normal normal 12px/16px Roboto;\n  letter-spacing: 0px;\n  color: #939393;\n  opacity: 1;\n}\n\n.maxcp{\n  width: 54px;\n  height: 19px;  \n  border-radius: 4px;\n  opacity: 1;\n  font: normal normal bold 14px/19px Roboto;\n  letter-spacing: 0px;\n  color: #FFFFFF;\n  opacity: 1;\n  text-align:center;\n}\n.roxo {\n  background: #662C91;\n}\n.amarelo {\n  background:  #F5B700;\n}\n.vermelho {\n  background:  #F87060;\n}\n.azul {\n  background: #00C1FD;\n}\n\n`;","import { Container, Row, Col } from 'react-bootstrap';\nimport {MainCard} from './styles';\ninterface Props {\n  __typename: string,\n  id: string,\n  image: string,\n  maxCP: number,\n  name: string,\n  number: string,\n  types: string[],\n};\n\n\nconst Pokemon = (props: Props) => {\n  let classe: string;\n  if (props.maxCP <= 500) {\n    classe = \"maxcp vermelho\";\n  } else if (props.maxCP > 500 && props.maxCP <= 1000) {\n    classe = \"maxcp roxo\";\n  } else if (props.maxCP > 1000 && props.maxCP <= 1500) {\n    classe = \"maxcp amarelo\";\n  } else {\n    classe = \"maxcp azul\";\n  }\n\n  return (\n    <MainCard>\n    <div className=\"pokemon\">\n      <Container>\n        <Row>\n          <Col sm={4} xs={4}>\n            <img src={props.image} alt={props.name} className=\"imagem-pokemon\" />\n          </Col>\n          <Col sm={6} xs={6}>\n            <div className=\"nome-pokemon\">\n              {props.name}\n            </div>\n            <div className=\"tipos-pokemon\">\n              {props.types.join(\", \")}\n            </div>\n            <div className={classe}>\n              <p className=\"maxcp-text\">{props.maxCP}</p>\n            </div>\n          </Col>\n          <Col sm={2} xs={2}>\n            <div className=\"numero-pokemon\">\n              {props.number}\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n    </MainCard>\n  );\n}\n\nexport default Pokemon;","import { useQuery } from '@apollo/react-hooks';\nimport { QUERY_POKEMONS } from '../../graphql/query-pokemons';\nimport { MainCard } from './styles';\nimport Pokemon from '../Pokemon/Pokemon';\nimport { Container, Row } from 'react-bootstrap';\n\n\ninterface Props {\n  intervaloCP: number[];\n  listaTipos: string[];\n}\n\ninterface Pokemon {\n  id: string,\n  number: string,\n  name: string,\n  types: string[],\n  image: string,\n  maxCP: number,\n}\nconst ListaPokemon = (props: Props) => {\n  const { data: { pokemons = [] } = {} } = useQuery(QUERY_POKEMONS, {\n    variables: { first: 151 },\n  });\n\n  return (\n    <MainCard>\n    <div className=\"lista-pokemon\">\n      <Container fluid=\"md\">\n        <Row>\n          <h1 className=\"lista-titulo\">Lista de Pokémons</h1>\n        </Row>\n        <Row>\n          <p className=\"texto-total\">Total visíveis: {\n            pokemons?.filter((pokemon: any) =>\n            (pokemon.maxCP >= props.intervaloCP[0] && pokemon.maxCP <= props.intervaloCP[1] &&\n              (props.listaTipos.includes(pokemon.types[0]) || props.listaTipos.includes(pokemon.types[1])))).length}\n          </p>\n        </Row>\n      </Container>\n      <Container className=\"lista-pokemon-view\">\n        {pokemons?.filter((pokemon: Pokemon) =>\n        (pokemon.maxCP >= props.intervaloCP[0] && pokemon.maxCP <= props.intervaloCP[1] &&\n          (props.listaTipos.includes(pokemon.types[0]) || props.listaTipos.includes(pokemon.types[1])))).map((pokemon: any) =>\n            <Pokemon\n              key={pokemon.id}\n              __typename={pokemon.__typename}\n              id={pokemon.id}\n              image={pokemon.image}\n              maxCP={pokemon.maxCP}\n              name={pokemon.name}\n              number={pokemon.number}\n              types={pokemon.types}\n            />\n          )}\n      </Container>\n    </div>\n    </MainCard>\n  );\n};\n\nexport default ListaPokemon;","import styled from \"styled-components\";\n\nexport const MainCard = styled.div`\n.maxCP-label{\n  margin-left:15px;\n  text-align: left;\n  font: normal normal normal 14px/19px Roboto;\n  letter-spacing: 0px;\n  color: #939393;\n}\n.slider{\n  margin-left:15px;\n}\n`;","import { useState } from 'react';\n\nimport {MainCard} from './styles';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n  },\n});\n\n\nconst FiltroCP = () => {\n\n  const classes = useStyles();\n  const [value, setValue] = useState([50, 3905]);\n  const handleChange = (event: any, newValue: any) => {\n    setValue(newValue);\n  };\n\n  return {\n    value,\n    renderSlider: (\n      <MainCard>\n        <Typography id=\"range-slider\" gutterBottom>\n          <p className=\"maxCP-label\">maxCP</p>\n        </Typography>\n        <div className={classes.root}>\n          <Slider\n            value={value}\n            onChange={handleChange}\n            valueLabelDisplay=\"off\"\n            aria-labelledby=\"range-slider\"\n            max={4000}\n            className=\"slider\"\n          />\n        </div>\n      </MainCard>\n    )\n  };\n};\n\nexport default FiltroCP;","import styled from \"styled-components\";\n\n  export const MainCard = styled.div`\n    .grupo-tipos{\n    display:grid;\n    grid-template-columns:repeat(3,1fr);\n  }\n  .checkbox-tipo{\n    margin:5px auto;\n    width:100%;\n  }\n`;","import { useState } from 'react';\nimport {MainCard} from './styles';\n\n//importando bibliotecas importantes para as checkboxes\nimport {\n  Checkbox,\n  CheckboxGroup,\n  ChakraProvider\n} from \"@chakra-ui/react\"\n\nconst ListaTipos = () => {\n  const tipos: string[] = [\n    'Normal',\n    'Water',\n    'Poison',\n    'Psychic',\n    'Bug',\n    'Dark',\n    'Fire',\n    'Flying',\n    'Electric',\n    'Rock',\n    'Dragon',\n    'Steel',\n    'Fighting',\n    'Grass',\n    'Ground',\n    'Ice',\n    'Ghost',\n    'Fairy',\n  ];\n  const [tiposSelecionados, setTiposSelecionados] = useState(tipos);\n\n  type evento = {\n    changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void\n  }\n\n  const changeHandler = (e: React.FormEvent<HTMLInputElement>) => {\n    if (tiposSelecionados.includes(e.currentTarget.name)) {\n      setTiposSelecionados(tiposSelecionados.filter(valor => valor !== e.currentTarget.name));\n    } else {\n      setTiposSelecionados([...tiposSelecionados, e.currentTarget.name]);\n    }\n  }\n\n  return {\n    tiposSelecionados,\n    renderListaTipos: (\n      <MainCard>\n        <ChakraProvider>\n          <CheckboxGroup>\n            <div className=\"grupo-tipos\">\n\n              {tipos.map((tipo: string) => //uma checkbox para cada tipo de Pokémon\n                <Checkbox\n                  size=\"md\"\n                  colorScheme=\"blue\"\n                  defaultIsChecked\n                  name={tipo}\n                  onChange={changeHandler} //evento que controla quais checkboxes estão selecionadas\n                  className=\"checkbox-tipo\"\n                >{tipo}</Checkbox>\n              )}\n\n            </div>\n          </CheckboxGroup>\n        </ChakraProvider>\n        </MainCard>)\n  };\n};\n\nexport default ListaTipos;","import styled from \"styled-components\";\n\nexport const MainCard = styled.div`\nmargin-top:100px;\n\n.div-intervalo{\n  display:flex;\n  justify-content:space-between;\n  @media(max-width:720px){\n    justify-content:space-around;\n  }\n}\n\n.titulo-filtro{\n  margin:5px;\n  padding-top: 30px;\n  margin-left:15px;\n  display:flex;\n  justify-content: left;\n  align-items: center;\n  text-align: left;\n  font: normal normal bold 35px/46px Roboto;\n  letter-spacing: 0px;\n  color: #333333;\n  opacity: 1;\n}\n\n.card-filtro{\n  width: 429px;\n  height: 556px;\n  background: #F4F4F4 0% 0% no-repeat padding-box;\n  border-radius: 50px 0px 0px 50px;\n  opacity: 1;\n}\n\n.maxCP-min{\n  font-weight:700;\n  //margin-left:5px;\n  display:flex;\n  text-align:center;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid #DBDBDB;\n  border-radius: 10px;\n  opacity: 1;\n  width: 77px;\n  height: 34px;\n}\n\n.maxCP-max{\n  font-weight:700;\n  //margin-left: 100px;\n  display:flex;\n  text-align:center;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid #DBDBDB;\n  border-radius: 10px;\n  opacity: 1;\n  width: 77px;\n  height: 34px;\n}\n.types-label{\n  margin-left:15px;\n  padding-top:5px;\n  text-align: left;\n  font: normal normal normal 14px/19px Roboto;\n  letter-spacing: 0px;\n  color: #939393;\n  opacity: 1;\n  margin-top:10px;\n  margin-bottom:15px;\n}\n`;","import FiltroCP from '../FiltroCP/FiltroCP';\nimport ListaTipos from '../ListaTipos/ListaTipos';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { MainCard } from './styles';\n\nconst Filtro = () => {\n  const { value, renderSlider } = FiltroCP();\n  const { tiposSelecionados, renderListaTipos } = ListaTipos();\n  return {\n    value, tiposSelecionados, renderFiltro: (\n      <MainCard>\n      <div className=\"card-filtro\">\n        <Container>\n          <Row>\n            <h1 className=\"titulo-filtro\">Filtro</h1>\n          </Row>\n          <Row>\n            {renderSlider}\n          </Row>\n          <Row>\n            <div className=\"div-intervalo\">\n              <div className=\"maxCP-min\">\n                {value[0]}\n              </div>\n              <div className=\"maxCP-max\">\n                {value[1]}\n              </div>\n              </div>\n          </Row>\n          <Row>\n            <p className=\"types-label\">Types</p>\n          </Row>\n          <Row>\n            {renderListaTipos}\n          </Row>\n        </Container>\n      </div>\n      </MainCard>\n    )\n  };\n};\n\nexport default Filtro;","import { createGlobalStyle } from 'styled-components';\nimport styled from 'styled-components';\nexport const GlobalStyle = createGlobalStyle`\n  *{\n    margin:0;\n    padding:0;\n    box-sizing:border-box;\n    font-family:\"Roboto\", sans-serif;\n  }\n  html{\n    @media(max-width:1080px){ // quando o usuário estiver com uma tela de até 1080 px de largura\n      font-size:93.75%;\n    }\n    @media(max-width:720px){\n      font-size:87.5%;\n    }\n  }\n  body{\n    -webkit-font-smoothing:antialiased;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong{\n    font-weight:700;\n  }\n`;\n\nexport const MainCard = styled.main`\n  display:flex;\n  justify-content: space-around;\n  top: 0px;\n  left: 0px;\n  background: #FFFFFF 0% 0% no-repeat padding-box;\n  opacity: 1;\n  &.filtro-card{\n    margin-top:30px;\n  }\n`;","import { FC } from 'react';\nimport ListaPokemon from './components/Lista/ListaPokemon';\nimport Filtro from './components/Filtro/Filtro';\nimport { GlobalStyle, MainCard } from './styles/global';\nimport { ApolloProvider } from \"@apollo/react-hooks\";//se der pau, trocar o apolloprovider pro import de baixo\nimport { createHttpLink, InMemoryCache, ApolloClient } from \"@apollo/client\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nexport const link = createHttpLink({\n  uri: \"https://graphql-pokemon2.vercel.app/\"\n});\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link,\n});\n\nconst App: FC = () => {\n  const { value, tiposSelecionados, renderFiltro } = Filtro();\n  return (\n    <>\n    <MainCard>\n      <ApolloProvider client={client}>\n        <Container fluid={true}>\n          <Row>\n            <Col xs={12} md={8}>\n              <ListaPokemon intervaloCP={value} listaTipos={tiposSelecionados} />\n            </Col>\n            <Col xs={6} md={4} className=\"filtro-card\">\n              {renderFiltro}\n            </Col>\n          </Row>\n        </Container>\n      </ApolloProvider>\n    </ MainCard>\n    <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}